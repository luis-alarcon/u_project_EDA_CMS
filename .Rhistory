fill = Economic.Analysis.Region),
stat = "count") +
ggtitle("Number of CMS per Bureau of Economic Analysis Region.")+
scale_x_discrete(breaks = 1:8, labels=c("D1","D2","D3","D4","D5","D6",
"D7","D8")) +
xlab(NULL)
#P5 produces a bar graph with the count of entries
#that are from the same census region with legends of the census region division
p5 = ggplot(aes(x=Census.Region, fill = Census.Region.Division), data= df_cms,
stat = "count")+
geom_bar()+
ggtitle("Number of CMS per Census Region with the divisions shown.")+
scale_x_discrete(breaks = 1:4, labels=c("MIDWEST","NORTHEAST",
"SOUTH","WEST")) +
xlab(NULL)
lay <- rbind(c(1,1),
c(2,3),
c(4,5))
grid.arrange(p1, p2, p3, p4, p5, layout_matrix = lay)
#The following code maanges the output of messages and warning when the code is run. The code also manages the figure size of an image created in the project.
knitr::opts_chunk$set(fig.width=9,fig.height=5,fig.path='Figs/',
fig.align='center',tidy=TRUE,
echo=FALSE,warning=FALSE,message=FALSE)
#The libraries used in this project are loaded
library(ggplot2)
library(gridExtra)
library(grid)
library(lattice)
library(GGally)
library(dplyr)
#We load the dataset and produce a first look of the data containing it.
df_cms <- read.csv("./datasets/df_cms.csv")
#The following code maanges the output of messages and warning when the code is run. The code also manages the figure size of an image created in the project.
knitr::opts_chunk$set(fig.width=9,fig.height=5,fig.path='Figs/',
fig.align='center',tidy=TRUE,
echo=FALSE,warning=FALSE,message=FALSE)
#The libraries used in this project are loaded
library(ggplot2)
library(gridExtra)
library(grid)
library(lattice)
library(GGally)
library(dplyr)
#We load the dataset and produce a first look of the data containing it.
df_cms <- read.csv("./datasets/df_cms.csv")
head(df_cms)
#We check if there are any nulls in the dataset
df_null <- df_cms[is.na(df_cms),]
print(head(df_null))
#We check the dimensions of the dataset
dim(df_cms)
#We produce a summary of the dataset
summary(df_cms)
# We will produce our first graph of the dataset
#P1 produces a bar graph with the count of entries
#that are from the same census region
p1 = ggplot(df_cms) +
geom_histogram(aes(x = Census.Region, fill = Census.Region), stat = "count") +
ggtitle("Number of CMS per Census Region.")+
scale_x_discrete(breaks = 1:4, labels=c("MIDWEST","NORTHEAST","SOUTH","WEST")) +
xlab(NULL)
#P2 produces a bar graph with the count of entries
#that are from the same census region division
p2 = ggplot(df_cms) + geom_histogram(aes(x = Census.Region.Division,
fill = Census.Region.Division),
stat = "count") +
ggtitle("Number of CMS per Census Region Division.") +
scale_x_discrete(breaks = 1:9, labels=c("D1","D2","D3","D4","D5","D6",
"D7","D8","D9")) +
xlab(NULL)
#P3 produces a bar graph with the count of entries
#that are from the same federal region
p3 = ggplot(df_cms) + geom_histogram(aes(x = Federal.Region,
fill = Federal.Region),
stat = "count") +
ggtitle("Number of CMS per Federal Bank Region.")+
scale_x_discrete(breaks = 1:9, labels=c("REGION_I","REGION_II","REGION_III",
"REGION_IV","REGION_V","REGION_VI",
"REGION_VII",
"REGION_VIII","REGION_X")) +
xlab(NULL)
#P4 produces a bar graph with the count of entries
#that are from the same economic analysis region
p4 = ggplot(df_cms) + geom_histogram(aes(x = Economic.Analysis.Region,
fill = Economic.Analysis.Region),
stat = "count") +
ggtitle("Number of CMS per Bureau of Economic Analysis Region.")+
scale_x_discrete(breaks = 1:8, labels=c("D1","D2","D3","D4","D5","D6",
"D7","D8")) +
xlab(NULL)
#P5 produces a bar graph with the count of entries
#that are from the same census region with legends of the census region division
p5 = ggplot(aes(x=Census.Region, fill = Census.Region.Division), data= df_cms,
stat = "count")+
geom_bar()+
ggtitle("Number of CMS per Census Region with the divisions shown.")+
scale_x_discrete(breaks = 1:4, labels=c("MIDWEST","NORTHEAST",
"SOUTH","WEST")) +
xlab(NULL)
lay <- rbind(c(1,1),
c(2,3),
c(4,5))
grid.arrange(p1, p2, p3, p4, p5, layout_matrix = lay)
#we load the package plyr
library(plyr)
#We create tables shown the frequencies shown in the images shown above.
print(count(df_cms, vars = "Census.Region"))
print(count(df_cms, vars = "Census.Region.Division"))
print(count(df_cms, vars = "Federal.Region"))
print(count(df_cms, vars = "Economic.Analysis.Region"))
#We generate a summary description  of the Total Discharges by regions
by(df_cms$Total.Discharges, df_cms$Census.Region, summary)
#We generate a summary description  of the Average Covered Charges by regions
by(df_cms$Average.Covered.Charges, df_cms$Census.Region, summary)
#We generate a summary description  of the Average Total Payments by regions
by(df_cms$Average.Total.Payments, df_cms$Census.Region, summary)
#We generate a summary description  of the Average Medicare Payments by regions
by(df_cms$Average.Medicare.Payments, df_cms$Census.Region, summary)
theme_set(theme_minimal(12))
# set the seed for reproducible results
set.seed(2000)
df_cms_subset <- df_cms[,c("Total.Discharges","Average.Covered.Charges",
"Average.Total.Payments",
"Average.Medicare.Payments")]
ggpairs(df_cms_subset[sample.int(nrow(df_cms_subset),2000), ])
#We create a scatter plot between
#the average covered charges vs average medicare payments
ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/5, position = position_jitter(h=0))+
ggtitle("Average Covered Charges vs Average Medicare Payments")
#We create a series of plots that showcase
#the average covered charges vs average medicare payments
#This graph show an overall view of all regions
p1 =ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/5, position = position_jitter(h=0))+
ggtitle("Average Covered Charges vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8), axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the Midwest
p2 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "MIDWEST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "blue")+
ggtitle("Midwest Region: Average Covered Charges
vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8), axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the Northeast
p3 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "NORTHEAST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "green")+
ggtitle("Northeast: Average Covered Charges vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8), axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the South
p4 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "SOUTH")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "red")+
ggtitle("South: Average Covered Charges vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8), axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the West
p5 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "WEST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "brown")+
ggtitle("West: Average Covered Charges vs Average Medicare Payments")+
#The following code maanges the output of messages and warning when the code is run. The code also manages the figure size of an image created in the project.
knitr::opts_chunk$set(fig.width=9,fig.height=5,fig.path='Figs/',
fig.align='center',tidy=TRUE,
echo=FALSE,warning=FALSE,message=FALSE)
#The libraries used in this project are loaded
library(ggplot2)
library(gridExtra)
library(grid)
library(lattice)
library(GGally)
library(dplyr)
#We load the dataset and produce a first look of the data containing it.
df_cms <- read.csv("./datasets/df_cms.csv")
head(df_cms)
#We check if there are any nulls in the dataset
df_null <- df_cms[is.na(df_cms),]
print(head(df_null))
#We check the dimensions of the dataset
dim(df_cms)
#We produce a summary of the dataset
summary(df_cms)
# We will produce our first graph of the dataset
#P1 produces a bar graph with the count of entries
#that are from the same census region
p1 = ggplot(df_cms) +
geom_histogram(aes(x = Census.Region, fill = Census.Region), stat = "count") +
ggtitle("Number of CMS per Census Region.")+
scale_x_discrete(breaks = 1:4, labels=c("MIDWEST","NORTHEAST","SOUTH","WEST")) +
xlab(NULL)
#P2 produces a bar graph with the count of entries
#that are from the same census region division
p2 = ggplot(df_cms) + geom_histogram(aes(x = Census.Region.Division,
fill = Census.Region.Division),
stat = "count") +
ggtitle("Number of CMS per Census Region Division.") +
scale_x_discrete(breaks = 1:9, labels=c("D1","D2","D3","D4","D5","D6",
"D7","D8","D9")) +
xlab(NULL)
#P3 produces a bar graph with the count of entries
#that are from the same federal region
p3 = ggplot(df_cms) + geom_histogram(aes(x = Federal.Region,
fill = Federal.Region),
stat = "count") +
ggtitle("Number of CMS per Federal Bank Region.")+
scale_x_discrete(breaks = 1:9, labels=c("REGION_I","REGION_II","REGION_III",
"REGION_IV","REGION_V","REGION_VI",
"REGION_VII",
"REGION_VIII","REGION_X")) +
xlab(NULL)
#P4 produces a bar graph with the count of entries
#that are from the same economic analysis region
p4 = ggplot(df_cms) + geom_histogram(aes(x = Economic.Analysis.Region,
fill = Economic.Analysis.Region),
stat = "count") +
ggtitle("Number of CMS per Bureau of Economic Analysis Region.")+
scale_x_discrete(breaks = 1:8, labels=c("D1","D2","D3","D4","D5","D6",
"D7","D8")) +
xlab(NULL)
#P5 produces a bar graph with the count of entries
#that are from the same census region with legends of the census region division
p5 = ggplot(aes(x=Census.Region, fill = Census.Region.Division), data= df_cms,
stat = "count")+
geom_bar()+
ggtitle("Number of CMS per Census Region with the divisions shown.")+
scale_x_discrete(breaks = 1:4, labels=c("MIDWEST","NORTHEAST",
"SOUTH","WEST")) +
xlab(NULL)
lay <- rbind(c(1,1),
c(2,3),
c(4,5))
grid.arrange(p1, p2, p3, p4, p5, layout_matrix = lay)
#we load the package plyr
library(plyr)
#We create tables shown the frequencies shown in the images shown above.
print(count(df_cms, vars = "Census.Region"))
print(count(df_cms, vars = "Census.Region.Division"))
print(count(df_cms, vars = "Federal.Region"))
print(count(df_cms, vars = "Economic.Analysis.Region"))
#We generate a summary description  of the Total Discharges by regions
by(df_cms$Total.Discharges, df_cms$Census.Region, summary)
#We generate a summary description  of the Average Covered Charges by regions
by(df_cms$Average.Covered.Charges, df_cms$Census.Region, summary)
#We generate a summary description  of the Average Total Payments by regions
by(df_cms$Average.Total.Payments, df_cms$Census.Region, summary)
#We generate a summary description  of the Average Medicare Payments by regions
by(df_cms$Average.Medicare.Payments, df_cms$Census.Region, summary)
theme_set(theme_minimal(12))
# set the seed for reproducible results
set.seed(2000)
df_cms_subset <- df_cms[,c("Total.Discharges","Average.Covered.Charges",
"Average.Total.Payments",
"Average.Medicare.Payments")]
ggpairs(df_cms_subset[sample.int(nrow(df_cms_subset),2000), ])
#We create a scatter plot between
#the average covered charges vs average medicare payments
ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/5, position = position_jitter(h=0))+
ggtitle("Average Covered Charges vs Average Medicare Payments")
#We create a series of plots that showcase
#the average covered charges vs average medicare payments
#This graph show an overall view of all regions
p1 =ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/5, position = position_jitter(h=0))+
ggtitle("Average Covered Charges vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the Midwest
p2 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "MIDWEST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "blue")+
ggtitle("Midwest Region: Average Covered Charges
vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the Northeast
p3 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "NORTHEAST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "green")+
ggtitle("Northeast: Average Covered Charges vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the South
p4 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "SOUTH")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "red")+
ggtitle("South: Average Covered Charges vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#average covered charges vs average medicare payments from the West
p5 = ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "WEST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "brown")+
ggtitle("West: Average Covered Charges vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,250000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#plotting the graphs
lay <- rbind(c(1,1),
c(2,3),
c(4,5))
grid.arrange(p1, p2, p3, p4, p5, layout_matrix = lay)
#We do a correlation test between
#Average Covered Charges and Average Medicare Payments
res <- cor.test(df_cms$Average.Covered.Charges,
df_cms$Average.Medicare.Payments,
method = "pearson")
res
#We create a scatter plot between
#the total discharges vs average total payments
ggplot(aes(x=Total.Discharges, y=Average.Total.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/5, position = position_jitter(h=0))+
ggtitle("Average Total Discharges vs Average Total Payments")
#We create a series of plots that showcase the total discharges vs
#average total payments
#This graph show an overall view of all regions
p1 =ggplot(aes(x=Total.Discharges, y=Average.Total.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/5, position = position_jitter(h=0))+
ggtitle("Total Discharges vs Average Total Payments")+
ylim(0,50000)+
xlim(0,500)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#total discharges vs average total payments from the Midwest
p2 = ggplot(aes(x=Total.Discharges, y=Average.Total.Payments),
data=subset(df_cms, Census.Region == "MIDWEST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "blue")+
ggtitle("Midwest Region: Total Discharges vs Average Total Payments")+
ylim(0,50000)+
xlim(0,500)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#total discharges vs average total payments from the Northeast
p3 = ggplot(aes(x=Total.Discharges, y=Average.Total.Payments),
data=subset(df_cms, Census.Region == "NORTHEAST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "green")+
ggtitle("Northeast: Total Discharges vs Average Total Payments")+
ylim(0,50000)+
xlim(0,500)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#total discharges vs average total payments from the South
p4 = ggplot(aes(x=Total.Discharges, y=Average.Total.Payments),
data=subset(df_cms, Census.Region == "SOUTH")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "red")+
ggtitle("South: Total Discharges vs Average Total Payments")+
ylim(0,50000)+
xlim(0,500)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#total discharges vs average total payments from the West
p5 = ggplot(aes(x=Total.Discharges, y=Average.Total.Payments),
data=subset(df_cms, Census.Region == "WEST")) +
geom_point(alpha = 1/5, position = position_jitter(h=0), color = "brown")+
ggtitle("West: Total Discharges vs Average Total Payments")+
ylim(0,50000)+
xlim(0,500)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#plotting the graphs
lay <- rbind(c(1,1),
c(2,3),
c(4,5))
grid.arrange(p1, p2, p3, p4, p5, layout_matrix = lay)
#We do a correlation test between
#Total Discharges vs Average Total Payments
res <- cor.test(df_cms$Total.Discharges, df_cms$Average.Total.Payments,
method = "pearson")
res
#We do a general graph between
#Average Total Payments and Average Medicare Payments
ggplot(aes(x=Average.Total.Payments, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/5, position = position_jitter(h=0))+
ggtitle("Average Total Payments vs Average Medicare Payments")
#We create a series of plots that showcase
#the Average Total Payments and Average Medicare Payments
#This graph show an overall view of all regions
p1 =ggplot(aes(x=Average.Total.Payments, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/40, position = position_jitter(h=0))+
ggtitle("Average Total Payments vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,50000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#Average Total Payments and Average Medicare Payments from the Midwest
p2 = ggplot(aes(x=Average.Total.Payments, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "MIDWEST")) +
geom_point(alpha = 1/40, position = position_jitter(h=0), color = "blue")+
ggtitle("Midwest Region: Average Total Payments vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,50000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#Average Total Payments and Average Medicare Payments from the Northeast
p3 = ggplot(aes(x=Average.Total.Payments, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "NORTHEAST")) +
geom_point(alpha = 1/40, position = position_jitter(h=0), color = "green")+
ggtitle("Northeast: Average Total Payments vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,50000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#Average Total Payments and Average Medicare Payments from the South
p4 = ggplot(aes(x=Average.Total.Payments, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "SOUTH")) +
geom_point(alpha = 1/40, position = position_jitter(h=0), color = "red")+
ggtitle("South: Average Total Payments vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,50000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#This graph shows a scatter plot between
#Average Total Payments and Average Medicare Payments from the West
p5 = ggplot(aes(x=Average.Total.Payments, y=Average.Medicare.Payments),
data=subset(df_cms, Census.Region == "WEST")) +
geom_point(alpha = 1/40, position = position_jitter(h=0), color = "brown")+
ggtitle("West: Average Total Payments vs Average Medicare Payments")+
ylim(0,50000)+
xlim(0,50000)+
theme(text = element_text(size=9),plot.title = element_text(size=8),
axis.text=element_text(size=6),plot.margin=unit(c(1,1,1,1), "cm"))
#plotting the graphs
lay <- rbind(c(1,1),
c(2,3),
c(4,5))
grid.arrange(p1, p2, p3, p4, p5, layout_matrix = lay)
#A correlation test is made between
#Average Total Payments and Average Medicare Payments
res <- cor.test(df_cms$Average.Total.Payments, df_cms$Average.Medicare.Payments,
method = "pearson")
res
ggplot(aes(x=Census.Region.Division, fill=Census.Region),data= df_cms)+
geom_boxplot(aes(y= Total.Discharges))+
coord_cartesian(ylim = c(0, 90))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#We create a scatter plot between
#the average covered charges vs average medicare payments
ggplot(aes(x=Average.Covered.Charges, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/3, position = position_jitter(h=0))+
ggtitle("Average Covered Charges vs Average Medicare Payments")+
guides(color=guide_legend(title="Census\nRegion",
override.aes = list(alpha = 1)))+
xlab("Average Covered Charges ($)")+
ylab("Average Medicare Payemnts ($)")
#We do a general graph between
#Average Total Payments and Average Medicare Payments
ggplot(aes(x=Average.Total.Payments, y=Average.Medicare.Payments,
color=Census.Region),data= df_cms) +
geom_point(alpha = 1/3, position = position_jitter(h=0))+
ggtitle("Average Total Payments Average Medicare Payments")+
guides(color=guide_legend(title="Census\nRegion",
override.aes = list(alpha = 1)))+
xlab("Average Total Payments ($)")+
ylab("Average Medicare Payemnts ($)")
ggplot(aes(x=Census.Region.Division, fill=Census.Region),data= df_cms)+
geom_boxplot(aes(y= Total.Discharges))+
coord_cartesian(ylim = c(0, 90))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
guides(color=guide_legend(title="Census\nRegion",
override.aes = list(alpha = 1)))+
xlab("Census Region Division")+
ylab("Total Discharges")+
ggtitle("Total Discharges by Census Region Division")+
scale_x_discrete(labels=c("D1_NEW_ENGLAND" = "New England",
"D2_MID-ATLANTIC" = "Mid Atlantic",
"D3_EAST_NORTH_CENTRAL" = "East North Central",
"D4_WEST_NORTH_CENTRAL" = "West North Central",
"D5_SOUTH_ATLANTIC" = "South Atlantic",
"D6_EAST_SOUTH_CENTRAL" = "East South Central",
"D7_WEST_SOUTH_CENTRAL" = "West South Central",
"D8_MOUNTAIN" = "Mountain","D9_PACIFIC" = "Pacific"))
